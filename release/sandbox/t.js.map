{"version":3,"sources":["../../source/sandbox/t.js"],"names":[],"mappings":"AAAA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA","file":"t.js","sourcesContent":["// import Path from 'path'\n// // import Source from 'source-map-support'\n\n// import { Process } from '../index'\n\n// // Source.install({ 'handleUncaughtExceptions': true })\n\n// ;(async () => {\n\n//   try {\n\n//     let _onSIGINT = null\n//     let path = Path.join('resource', 'Process', 'process.pid')\n//     let timeout = 180000\n\n//     Process.on('SIGINT', _onSIGINT = () => {\n//       console.log('Process.on(\\'SIGINT\\', _onSIGINT = () => { ... })')\n\n//       Process.off('SIGINT', _onSIGINT)\n//       _onSIGINT = null\n\n//       let count = Process.listenerCount('SIGINT')\n\n//       if (count <= 0) {\n//         console.log('Process.exit()')\n//         Process.exit()\n//       } else {\n//         console.log(`Process.listenerCount('SIGINT') returns ${count}`)\n//       }\n\n//     })\n\n//     Process.createPidFile(path)\n    \n//     console.log(`Waiting ${timeout}ms ...`)\n//     Process.wait(timeout)\n\n//   } catch (error) {\n//     console.error(error)\n//   }\n\n// })()\n"]}