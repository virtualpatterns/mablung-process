{"version":3,"sources":["../../source/library/process.js"],"names":["FileSystem","Is","Path","ProcessArgumentError","ProcessDurationExceededError","ProcessOptionNotSupportedError","Process","wait","duration","Promise","resolve","setTimeout","when","maximumDuration","pollInterval","pollFn","reject","waitLoop","start","Date","value","then","catch","error","existsPidFile","path","accessSync","F_OK","process","kill","readFileSync","unlinkSync","createPidFile","handleExit","handleKillSignal","windows","_pidPath","relative","writeFileSync","pid","toString","_attach","_pidOption","on","__onExit","code","console","log","deletePidFile","forEach","signal","_exit","_detach","eventName","count","listenerCount","exit","option","not","undefined","off","signalPidFile","killPidFile","killSignal","Object","setPrototypeOf"],"mappings":"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","sourcesContent":["import FileSystem from 'fs'\nimport { Is } from '@virtualpatterns/mablung-is'\nimport Path from 'path'\n\nimport { ProcessArgumentError } from './error/process-argument-error.js'\nimport { ProcessDurationExceededError } from './error/process-duration-exceeded-error.js'\nimport { ProcessOptionNotSupportedError } from './error/process-option-not-supported-error.js'\n\nclass Process {\n\n  static wait(duration) {\n    return new Promise((resolve) => {\n      setTimeout(resolve, duration)\n    })\n  }\n\n  static when(maximumDuration, pollInterval, pollFn) {\n\n    return new Promise((resolve, reject) => {\n  \n      let waitLoop = function (start) {\n  \n        let duration = new Date() - start\n        let value = null\n        \n        try {\n  \n          value = pollFn()\n  \n          if (value instanceof Promise) {\n  \n            value\n              .then((value) => {\n    \n                if (!value && duration < maximumDuration) {\n                  setTimeout(() => waitLoop(start), pollInterval)\n                } else if (!value && duration >= maximumDuration) {\n                  reject(new ProcessDurationExceededError(duration, maximumDuration))\n                } else {\n                  resolve(value)\n                }\n    \n              })\n              .catch((error) => {\n    \n                if (duration < maximumDuration) {\n                  setTimeout(() => waitLoop(start), pollInterval)\n                } else if (duration >= maximumDuration) {\n                  reject(error)\n                }\n    \n              })\n    \n          } else {\n    \n            if (!value && duration < maximumDuration) {\n              setTimeout(() => waitLoop(start), pollInterval)\n            } else if (!value && duration >= maximumDuration) {\n              reject(new ProcessDurationExceededError(duration, maximumDuration))\n            } else {\n              resolve(value)\n            }\n    \n          }\n    \n        } catch (error) {\n  \n          if (duration < maximumDuration) {\n            setTimeout(() => waitLoop(start), pollInterval)\n          } else if (duration >= maximumDuration) {\n            reject(error)\n          }\n  \n        }\n  \n      }\n  \n      waitLoop(new Date())\n  \n    })\n  \n  }\n    \n  static existsPidFile(path) {\n\n    try {\n      FileSystem.accessSync(path, FileSystem.F_OK)\n    } catch (error) {\n      return false\n    }\n  \n    try {\n      process.kill(FileSystem.readFileSync(path, { 'encoding': 'utf-8' }), 0)\n    } catch (error) {\n      FileSystem.unlinkSync(path)\n      return false\n    }\n  \n    return true\n  \n  }\n  \n  static createPidFile(path, { handleExit = true, handleKillSignal = Is.windows() ? false : [ 'SIGINT', 'SIGTERM' ] } = {}) {\n\n    if (Process._pidPath) {\n      throw new ProcessArgumentError('A pid file has already been created.')\n    } else if (this.existsPidFile(path)) {\n      throw new ProcessArgumentError(`The path '${Path.relative('', path)}' exists.`)\n    } else {\n  \n      FileSystem.writeFileSync(path, process.pid.toString(), { 'encoding': 'utf-8' })\n\n      try {\n\n        Process._attach({ handleExit, handleKillSignal })\n    \n        Process._pidPath = path\n        Process._pidOption = { handleExit, handleKillSignal }\n  \n      } catch (error) {\n\n        FileSystem.accessSync(path, FileSystem.F_OK)\n        FileSystem.unlinkSync(path)\n  \n        throw error\n\n      }\n\n    }\n  \n  }\n\n  static _attach({ handleExit, handleKillSignal }) {\n\n    try {\n\n      if (handleExit) {\n\n        Process.on('exit', Process.__onExit = (code) => {\n          console.log(`Process.on('exit', Process.__onExit = (${code}) => { ... })`)\n          \n          try {\n            Process.deletePidFile()\n            /* c8 ignore next 3 */\n          } catch (error) {\n            console.error(error)\n          }\n    \n        })\n    \n      }\n  \n      if (handleKillSignal) {\n  \n        if (Is.windows()) {\n          throw new ProcessOptionNotSupportedError('handleKillSignal')\n        } else {\n        \n          handleKillSignal.forEach((signal) => {\n            Process.on(signal, Process[`__on${signal}`] = () => {\n              console.log(`Process.on('${signal}', Process.__on${signal} = () => { ... })`)\n            \n              try {\n                Process.deletePidFile()\n                this._exit(signal)\n                /* c8 ignore next 3 */\n              } catch (error) {\n                console.error(error)\n              }\n      \n            })\n          })\n    \n        }\n    \n      }\n\n    } catch (error) {\n      this._detach({ handleExit, handleKillSignal })\n      throw error\n    }\n\n  }\n\n  static _exit(eventName) {\n\n    let count = Process.listenerCount(eventName)\n\n    /* c8 ignore next 5 */\n    if (count <= 0) {\n      Process.exit()\n    } else {\n      console.log(`Process.listenerCount('${eventName}') returned ${count}`)\n    }\n\n  }\n\n  static deletePidFile() {\n\n    let path = Process._pidPath\n    let option = Process._pidOption\n  \n    if (this.existsPidFile(path)) {\n  \n      FileSystem.accessSync(path, FileSystem.F_OK)\n      FileSystem.unlinkSync(path)\n  \n      this._detach(option)\n\n      delete Process._pidPath\n      delete Process._pidOption\n  \n    }\n    else {\n      throw new ProcessArgumentError(`Either a pid file has not been created or the path ${Is.not.undefined(path) ? `'${Path.relative('', path)}' ` : ''}does not exist.`)\n    }\n  \n  }\n\n  static _detach({ handleExit, handleKillSignal }) {\n\n    if (handleKillSignal) {\n\n      handleKillSignal.forEach((signal) => {\n        if (Process[`__on${signal}`]) {\n          Process.off(signal, Process[`__on${signal}`])\n          delete Process[`__on${signal}`]\n        }\n      })\n  \n    }\n\n    if (handleExit) {\n\n      if (Process.__onExit) {\n        Process.off('exit', Process.__onExit)\n        delete Process.__onExit\n      }\n  \n    }\n\n  }\n\n  static signalPidFile(path, signal) {\n\n    if (this.existsPidFile(path)) {\n      this.kill(FileSystem.readFileSync(path, { 'encoding': 'utf-8' }), signal)\n    } else {\n      throw new ProcessArgumentError(`The path '${Path.relative('', path)}' does not exist.`)\n    }\n  \n  }\n  \n  static killPidFile(path, killSignal = 'SIGINT') {\n    return Process.signalPidFile(path, killSignal)\n  }\n  \n}\n\nObject.setPrototypeOf(Process, process)\n\nexport { Process }\n"],"file":"process.js"}