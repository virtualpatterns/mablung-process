{"version":3,"sources":["../../source/library/process.js"],"names":["FileSystem","Is","Path","ProcessArgumentError","ProcessDurationExceededError","Process","wait","duration","Promise","resolve","setTimeout","when","maximumDuration","pollInterval","pollFn","reject","waitLoop","start","Date","value","then","catch","error","existsPidFile","path","accessSync","F_OK","process","kill","readFileSync","unlinkSync","createPidFile","option","_onExit","relative","writeFileSync","pid","_attach","_pidPath","_pidOption","handleExit","on","code","console","log","deletePidFile","handleKillSignal","forEach","signal","_exit","eventName","count","listenerCount","exit","_detach","not","undefined","off","signalPidFile","killPidFile","killSignal","Object","setPrototypeOf"],"mappings":"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","sourcesContent":["import FileSystem from 'fs'\nimport Is from '@pwn/is'\nimport Path from 'path'\n\nimport { ProcessArgumentError } from './error/process-argument-error.js'\nimport { ProcessDurationExceededError } from './error/process-duration-exceeded-error.js'\n\nclass Process {\n\n  static wait(duration) {\n    return new Promise((resolve) => {\n      setTimeout(resolve, duration)\n    })\n  }\n\n  static when(maximumDuration, pollInterval, pollFn) {\n\n    return new Promise((resolve, reject) => {\n  \n      let waitLoop = function (start) {\n  \n        let duration = new Date() - start\n        let value = null\n        \n        try {\n  \n          value = pollFn()\n  \n          if (value instanceof Promise) {\n  \n            value\n              .then((value) => {\n    \n                if (!value && duration < maximumDuration) {\n                  setTimeout(() => waitLoop(start), pollInterval)\n                } else if (!value && duration >= maximumDuration) {\n                  reject(new ProcessDurationExceededError(duration, maximumDuration))\n                } else {\n                  resolve(value)\n                }\n    \n              })\n              .catch((error) => {\n    \n                if (duration < maximumDuration) {\n                  setTimeout(() => waitLoop(start), pollInterval)\n                } else if (duration >= maximumDuration) {\n                  reject(error)\n                }\n    \n              })\n    \n          } else {\n    \n            if (!value && duration < maximumDuration) {\n              setTimeout(() => waitLoop(start), pollInterval)\n            } else if (!value && duration >= maximumDuration) {\n              reject(new ProcessDurationExceededError(duration, maximumDuration))\n            } else {\n              resolve(value)\n            }\n    \n          }\n    \n        } catch (error) {\n  \n          if (duration < maximumDuration) {\n            setTimeout(() => waitLoop(start), pollInterval)\n          } else if (duration >= maximumDuration) {\n            reject(error)\n          }\n  \n        }\n  \n      }\n  \n      waitLoop(new Date())\n  \n    })\n  \n  }\n    \n  static existsPidFile(path) {\n\n    try {\n      FileSystem.accessSync(path, FileSystem.F_OK)\n    } catch (error) {\n      return false\n    }\n  \n    try {\n      process.kill(FileSystem.readFileSync(path, { 'encoding': 'utf-8' }), 0)\n    } catch (error) {\n      FileSystem.unlinkSync(path)\n      return false\n    }\n  \n    return true\n  \n  }\n  \n  static createPidFile(path, option = { \n    'handleExit': true,\n    // 'handleUncaughtException': true, \n    // 'handleUnhandledRejection': true, \n    'handleKillSignal': [ 'SIGINT', 'SIGTERM' ]\n  }) {\n\n    if (Process._onExit) {\n      throw new ProcessArgumentError('A pid file has already been created.')\n    } else if (this.existsPidFile(path)) {\n      throw new ProcessArgumentError(`The path '${Path.relative('', path)}' exists.`)\n    } else {\n  \n      FileSystem.writeFileSync(path, process.pid, { 'encoding': 'utf-8' })\n\n      Process._attach(option)\n    \n      Process._pidPath = path\n      Process._pidOption = option\n\n    }\n  \n  }\n\n  static _attach(option) {\n\n    if (option.handleExit) {\n\n      Process.on('exit', Process._onExit = (code) => {\n        console.log(`Process.on('exit', Process._onExit = (${code}) => { ... })`)\n        \n        try {\n          Process.deletePidFile()\n          /* c8 ignore next 3 */\n        } catch (error) {\n          console.error(error)\n        }\n  \n      })\n  \n    }\n\n    // if (option.handleUncaughtException) {\n\n    //   Process.on('uncaughtException', Process._onUncaughtException = (error, origin) => {\n    //     console.log(`Process.on('uncaughtException', Process._onUncaughtException = (error, '${origin}') => { ... })`)\n    //     console.error(error)\n        \n    //     try {\n    //       Process.deletePidFile()\n    //       /* c8 ignore next 3 */\n    //     } catch (error) {\n    //       console.error(error)\n    //     }\n  \n    //     this._exitOnListenerCount('uncaughtException')\n  \n    //   })\n\n    // }\n  \n    // if (option.handleUnhandledRejection) {\n\n    //   Process.on('unhandledRejection', Process._onUnhandledRejection = (error) => {\n    //     console.log('Process.on(\\'unhandledRejection\\', Process._onUnhandledRejection = (error) => { ... })')\n    //     console.error(error)\n        \n    //     try {\n    //       Process.deletePidFile()\n    //       /* c8 ignore next 3 */\n    //     } catch (error) {\n    //       console.error(error)\n    //     }\n  \n    //     this._exitOnListenerCount('unhandledRejection')\n  \n    //   })\n    \n    // }\n\n    if (option.handleKillSignal) {\n\n      option.handleKillSignal.forEach((signal) => {\n        Process.on(signal, Process[`_on${signal}`] = () => {\n          console.log(`Process.on('${signal}', Process._on${signal} = () => { ... })`)\n        \n          try {\n            Process.deletePidFile()\n            this._exit(signal)\n            /* c8 ignore next 3 */\n          } catch (error) {\n            console.error(error)\n          }\n  \n        })\n      })\n  \n    }\n\n  }\n\n  static _exit(eventName) {\n\n    let count = Process.listenerCount(eventName)\n\n    /* c8 ignore next 5 */\n    if (count <= 0) {\n      Process.exit()\n    } else {\n      console.log(`Process.listenerCount('${eventName}') returned ${count}`)\n    }\n\n  }\n\n  static deletePidFile() {\n\n    let path = Process._pidPath\n    let option = Process._pidOption\n  \n    if (this.existsPidFile(path)) {\n  \n      FileSystem.accessSync(path, FileSystem.F_OK)\n      FileSystem.unlinkSync(path)\n  \n      this._detach(option)\n\n      delete Process._pidPath\n      delete Process._pidOption\n  \n    }\n    else {\n      throw new ProcessArgumentError(`Either a pid file has not been created or the path ${Is.not.undefined(path) ? `'${Path.relative('', path)}' ` : ''}does not exist.`)\n    }\n  \n  }\n\n  static _detach(option) {\n\n    if (option.handleKillSignal) {\n\n      option.handleKillSignal.forEach((signal) => {\n        if (Process[`_on${signal}`]) {\n          Process.off(signal, Process[`_on${signal}`])\n          delete Process[`_on${signal}`]\n        }\n      })\n  \n    }\n\n    // if (Process._onUnhandledRejection) {\n    //   Process.off('unhandledRejection', Process._onUnhandledRejection)\n    //   delete Process._onUnhandledRejection\n    // }\n\n    // if (Process._onUncaughtException) {\n    //   Process.off('uncaughtException', Process._onUncaughtException)\n    //   delete Process._onUncaughtException\n    // }\n\n    if (option.handleExit) {\n\n      if (Process._onExit) {\n        Process.off('exit', Process._onExit)\n        delete Process._onExit\n      }\n  \n    }\n\n  }\n\n  static signalPidFile(path, signal) {\n\n    if (this.existsPidFile(path)) {\n      this.kill(FileSystem.readFileSync(path, { 'encoding': 'utf-8' }), signal)\n    } else {\n      throw new ProcessArgumentError(`The path '${Path.relative('', path)}' does not exist.`)\n    }\n  \n  }\n  \n  static killPidFile(path, killSignal = 'SIGINT') {\n    return Process.signalPidFile(path, killSignal)\n  }\n  \n}\n\nObject.setPrototypeOf(Process, process)\n\nexport { Process }\n"],"file":"process.js"}