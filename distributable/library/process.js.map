{"version":3,"sources":["../../source/library/process.js"],"names":["FileSystem","Is","Path","DurationExceededProcessError","OptionNotSupportedProcessError","PidFileExistsProcessError","PidFileNotExistsProcessError","BaseProcess","process","Process","wait","duration","Promise","resolve","setTimeout","when","maximumDuration","pollInterval","pollFn","reject","waitLoop","start","Date","value","then","catch","error","existsPidFile","path","pathExistsSync","kill","readFileSync","removeSync","createPidFile","handleExit","handleKillSignal","windows","_pidPath","ensureDirSync","dirname","writeFileSync","pid","toString","_attach","_pidOption","on","__onExit","code","_onExit","console","forEach","signal","_onSignal","_detach","deletePidFile","count","listenerCount","exit","log","off","option","signalPidFile","killPidFile","killSignal","Object","setPrototypeOf"],"mappings":"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","sourcesContent":["import FileSystem from 'fs-extra'\nimport { Is } from '@virtualpatterns/mablung-is'\nimport Path from 'path'\n\nimport { DurationExceededProcessError } from './error/duration-exceeded-process-error.js'\nimport { OptionNotSupportedProcessError } from './error/option-not-supported-process-error.js'\nimport { PidFileExistsProcessError } from './error/pid-file-exists-process-error.js'\nimport { PidFileNotExistsProcessError } from './error/pid-file-not-exists-process-error.js'\n\n// * ensureDir on create, remove from TextDecoderStream\n\nconst BaseProcess = process\n\nclass Process {\n\n  static wait(duration) {\n    return new Promise((resolve) => {\n      setTimeout(resolve, duration)\n    })\n  }\n\n  static when(maximumDuration, pollInterval, pollFn) {\n\n    return new Promise((resolve, reject) => {\n  \n      let waitLoop = function (start) {\n  \n        let duration = new Date() - start\n        let value = null\n        \n        try {\n  \n          value = pollFn()\n  \n          if (value instanceof Promise) {\n  \n            value\n              .then((value) => {\n    \n                if (!value && duration < maximumDuration) {\n                  setTimeout(() => waitLoop(start), pollInterval)\n                } else if (!value && duration >= maximumDuration) {\n                  reject(new DurationExceededProcessError(duration, maximumDuration))\n                } else {\n                  resolve(value)\n                }\n    \n              })\n              .catch((error) => {\n    \n                if (duration < maximumDuration) {\n                  setTimeout(() => waitLoop(start), pollInterval)\n                } else if (duration >= maximumDuration) {\n                  reject(error)\n                }\n    \n              })\n    \n          } else {\n    \n            if (!value && duration < maximumDuration) {\n              setTimeout(() => waitLoop(start), pollInterval)\n            } else if (!value && duration >= maximumDuration) {\n              reject(new DurationExceededProcessError(duration, maximumDuration))\n            } else {\n              resolve(value)\n            }\n    \n          }\n    \n        } catch (error) {\n  \n          if (duration < maximumDuration) {\n            setTimeout(() => waitLoop(start), pollInterval)\n          } else if (duration >= maximumDuration) {\n            reject(error)\n          }\n  \n        }\n  \n      }\n  \n      waitLoop(new Date())\n  \n    })\n  \n  }\n    \n  static existsPidFile(path) {\n\n    if (FileSystem.pathExistsSync(path)) {\n\n      try {\n        this.kill(FileSystem.readFileSync(path, { 'encoding': 'utf-8' }), 0)\n        return true\n      } catch (error) {\n        FileSystem.removeSync(path)\n        return false\n      }\n\n    } else {\n      return false\n    }\n  \n  }\n  \n  static createPidFile(path, { handleExit = true, handleKillSignal = Is.windows() ? false : [ 'SIGINT', 'SIGTERM' ] } = {}) {\n\n    if (this._pidPath) {\n      throw new PidFileExistsProcessError(this._pidPath)\n    } else if (this.existsPidFile(path)) {\n      throw new PidFileExistsProcessError(path)\n    } else {\n  \n      FileSystem.ensureDirSync(Path.dirname(path))\n      FileSystem.writeFileSync(path, this.pid.toString(), { 'encoding': 'utf-8' })\n\n      try {\n\n        this._attach({ handleExit, handleKillSignal })\n    \n        this._pidPath = path\n        this._pidOption = { handleExit, handleKillSignal }\n  \n      } catch (error) {\n        FileSystem.removeSync(path)\n        throw error\n      }\n\n    }\n  \n  }\n\n  static _attach({ handleExit, handleKillSignal }) {\n\n    try {\n\n      if (handleExit) {\n\n        this.on('exit', this.__onExit = (code) => {\n          // console.log(`Process.on('exit', Process.__onExit = (${code}) => { ... })`)\n          \n          try {\n            this._onExit(code)\n          /* c8 ignore next 3 */\n          } catch (error) {\n            console.error(error)\n          }\n    \n        })\n    \n      }\n  \n      if (handleKillSignal) {\n  \n        if (Is.windows()) {\n          throw new OptionNotSupportedProcessError('handleKillSignal')\n        } else {\n        \n          handleKillSignal.forEach((signal) => {\n            this.on(signal, this[`__on${signal}`] = () => {\n              // console.log(`Process.on('${signal}', Process.__on${signal} = () => { ... })`)\n            \n              try {\n                this._onSignal(signal)\n              /* c8 ignore next 3 */\n              } catch (error) {\n                console.error(error)\n              }\n      \n            })\n          })\n    \n        }\n    \n      }\n\n    } catch (error) {\n      this._detach({ handleExit, handleKillSignal })\n      throw error\n    }\n\n  }\n\n  static _onExit(code) {\n    this.deletePidFile()\n  }\n\n  static _onSignal(signal) {\n\n    this.deletePidFile()\n\n    let count = this.listenerCount(signal)\n\n    /* c8 ignore next 5 */\n    if (count <= 0) {\n      this.exit()\n    } else {\n      console.log(`Process.listenerCount('${signal}') returned ${count}`)\n    }\n\n  }\n\n  static _detach({ handleExit, handleKillSignal }) {\n\n    if (handleKillSignal) {\n\n      handleKillSignal.forEach((signal) => {\n        if (this[`__on${signal}`]) {\n          this.off(signal, this[`__on${signal}`])\n          delete this[`__on${signal}`]\n        }\n      })\n  \n    }\n\n    if (handleExit) {\n\n      if (this.__onExit) {\n        this.off('exit', this.__onExit)\n        delete this.__onExit\n      }\n  \n    }\n\n  }\n\n  static deletePidFile() {\n\n    let path = this._pidPath\n    let option = this._pidOption\n  \n    if (this.existsPidFile(path)) {\n  \n      FileSystem.removeSync(path)\n  \n      this._detach(option)\n\n      delete Process._pidPath\n      delete Process._pidOption\n  \n    }\n    else {\n      throw new PidFileNotExistsProcessError(path)\n    }\n  \n  }\n\n  static signalPidFile(path, signal) {\n\n    if (this.existsPidFile(path)) {\n      this.kill(FileSystem.readFileSync(path, { 'encoding': 'utf-8' }), signal)\n    } else {\n      throw new PidFileNotExistsProcessError(path)\n    }\n  \n  }\n  \n  static killPidFile(path, killSignal = 'SIGINT') {\n    return this.signalPidFile(path, killSignal)\n  }\n  \n}\n\nObject.setPrototypeOf(Process, BaseProcess)\n\nexport { Process }\n"],"file":"process.js"}