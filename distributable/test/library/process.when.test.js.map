{"version":3,"sources":["../../../source/test/library/process.when.test.js"],"names":["Test","Process","ProcessDurationExceededError","before","test","context","maximumDuration","pollInterval","truthy","when","Promise","resolve","throwsAsync","Error"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,KAAjB;AAEA,SAASC,OAAT,EAAkBC,4BAAlB,QAAsD,gBAAtD;AAEAF,IAAI,CAACG,MAAL,CAAaC,IAAD,IAAU;AACpBA,EAAAA,IAAI,CAACC,OAAL,CAAaC,eAAb,GAA+B,IAA/B;AACAF,EAAAA,IAAI,CAACC,OAAL,CAAaE,YAAb,GAA4BH,IAAI,CAACC,OAAL,CAAaC,eAAb,GAA+B,CAA3D;AACD,CAHD;AAKAN,IAAI,CAAC,4FAAD,EAA+F,MAAOI,IAAP,IAAgB;AACjHA,EAAAA,IAAI,CAACI,MAAL,CAAY,MAAMP,OAAO,CAACQ,IAAR,CAAaL,IAAI,CAACC,OAAL,CAAaC,eAA1B,EAA2CF,IAAI,CAACC,OAAL,CAAaE,YAAxD,EAAsE,MAAM,IAA5E,CAAlB;AACD,CAFG,CAAJ;AAIAP,IAAI,CAAC,8FAAD,EAAiG,MAAOI,IAAP,IAAgB;AACnHA,EAAAA,IAAI,CAACI,MAAL,CAAY,MAAMP,OAAO,CAACQ,IAAR,CAAaL,IAAI,CAACC,OAAL,CAAaC,eAA1B,EAA2CF,IAAI,CAACC,OAAL,CAAaE,YAAxD,EAAsE,MAAM;AAC5F,WAAOG,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACD,GAFiB,CAAlB;AAGD,CAJG,CAAJ;AAMAX,IAAI,CAAC,6FAAD,EAAgG,MAAOI,IAAP,IAAgB;AAClH,QAAMA,IAAI,CAACQ,WAAL,CAAiBX,OAAO,CAACQ,IAAR,CAAaL,IAAI,CAACC,OAAL,CAAaC,eAA1B,EAA2CF,IAAI,CAACC,OAAL,CAAaE,YAAxD,EAAsE,MAAM,KAA5E,CAAjB,EAAqG;AAAE,kBAAcL;AAAhB,GAArG,CAAN;AACD,CAFG,CAAJ;AAIAF,IAAI,CAAC,qFAAD,EAAwF,MAAOI,IAAP,IAAgB;AAC1G,QAAMA,IAAI,CAACQ,WAAL,CAAiBX,OAAO,CAACQ,IAAR,CAAaL,IAAI,CAACC,OAAL,CAAaC,eAA1B,EAA2CF,IAAI,CAACC,OAAL,CAAaE,YAAxD,EAAsE,MAAM;AAAE,UAAMM,KAAK,EAAX;AAAe,GAA7F,CAAjB,EAAiH;AAAE,kBAAcA;AAAhB,GAAjH,CAAN;AACD,CAFG,CAAJ;AAIAb,IAAI,CAAC,+FAAD,EAAkG,MAAOI,IAAP,IAAgB;AACpH,QAAMA,IAAI,CAACQ,WAAL,CAAiBX,OAAO,CAACQ,IAAR,CAAaL,IAAI,CAACC,OAAL,CAAaC,eAA1B,EAA2CF,IAAI,CAACC,OAAL,CAAaE,YAAxD,EAAsE,MAAM;AACjG,WAAOG,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAAP;AACD,GAFsB,CAAjB,EAEF;AAAE,kBAAcT;AAAhB,GAFE,CAAN;AAGD,CAJG,CAAJ;AAMAF,IAAI,CAAC,uFAAD,EAA0F,MAAOI,IAAP,IAAgB;AAC5G,QAAMA,IAAI,CAACQ,WAAL,CAAiBX,OAAO,CAACQ,IAAR,CAAaL,IAAI,CAACC,OAAL,CAAaC,eAA1B,EAA2CF,IAAI,CAACC,OAAL,CAAaE,YAAxD,EAAsE,MAAM;AACjG,WAAO,IAAIG,OAAJ,CAAY,MAAM;AAAE,YAAMG,KAAK,EAAX;AAAe,KAAnC,CAAP;AACD,GAFsB,CAAjB,EAEF;AAAE,kBAAcA;AAAhB,GAFE,CAAN;AAGD,CAJG,CAAJ","sourcesContent":["import Test from 'ava'\n\nimport { Process, ProcessDurationExceededError } from '../../index.js'\n\nTest.before((test) => {\n  test.context.maximumDuration = 1000\n  test.context.pollInterval = test.context.maximumDuration / 4\n})\n\nTest('Process.when(maximumDuration, pollInterval, pollFn) when a synchronous pollFn returns true', async (test) => {\n  test.truthy(await Process.when(test.context.maximumDuration, test.context.pollInterval, () => true))\n})\n\nTest('Process.when(maximumDuration, pollInterval, pollFn) when an asynchronous pollFn returns true', async (test) => {\n  test.truthy(await Process.when(test.context.maximumDuration, test.context.pollInterval, () => {\n    return Promise.resolve(true)\n  }))\n})\n\nTest('Process.when(maximumDuration, pollInterval, pollFn) when a synchronous pollFn returns false', async (test) => {\n  await test.throwsAsync(Process.when(test.context.maximumDuration, test.context.pollInterval, () => false), { 'instanceOf': ProcessDurationExceededError })\n})\n\nTest('Process.when(maximumDuration, pollInterval, pollFn) when a synchronous pollFn fails', async (test) => {\n  await test.throwsAsync(Process.when(test.context.maximumDuration, test.context.pollInterval, () => { throw Error() }), { 'instanceOf': Error })\n})\n\nTest('Process.when(maximumDuration, pollInterval, pollFn) when an asynchronous pollFn returns false', async (test) => {\n  await test.throwsAsync(Process.when(test.context.maximumDuration, test.context.pollInterval, () => {\n    return Promise.resolve(false)\n  }), { 'instanceOf': ProcessDurationExceededError })\n})\n\nTest('Process.when(maximumDuration, pollInterval, pollFn) when an asynchronous pollFn fails', async (test) => {\n  await test.throwsAsync(Process.when(test.context.maximumDuration, test.context.pollInterval, () => {\n    return new Promise(() => { throw Error() })\n  }), { 'instanceOf': Error })\n})\n"],"file":"process.when.test.js"}