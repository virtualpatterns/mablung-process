{"version":3,"sources":["../../../source/test/library/process.exists-pid-file.test.js"],"names":["FileSystem","Test","WorkerClient","Process","Require","_createRequire","import","meta","url","before","test","context","basePath","ensureDir","path","writeFile","process","pid","toString","true","existsPidFile","unlink","false","throwsAsync","access","bind","F_OK","worker","resolve","end"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,UAAvB;AACA,OAAOC,IAAP,MAAiB,KAAjB;AACA,SAASC,YAAT,QAA6B,iCAA7B;AAEA,SAASC,OAAT,QAAwB,gBAAxB;;AAEA,MAAMC,OAAO,GANbC,cAAc,CAACC,MAAM,CAACC,IAAP,CAAYC,GAAb,CAMd;;AAEAP,IAAI,CAACQ,MAAL,CAAY,MAAOC,IAAP,IAAgB;AAC1BA,EAAAA,IAAI,CAACC,OAAL,CAAaC,QAAb,GAAwB,6BAAxB;AACA,QAAMZ,UAAU,CAACa,SAAX,CAAqBH,IAAI,CAACC,OAAL,CAAaC,QAAlC,CAAN;AACD,CAHD;AAKAX,IAAI,CAAC,2DAAD,EAA8D,MAAOS,IAAP,IAAgB;AAEhF,MAAII,IAAI,GAAI,GAAEJ,IAAI,CAACC,OAAL,CAAaC,QAAS,mBAApC;AAEA,QAAMZ,UAAU,CAACe,SAAX,CAAqBD,IAArB,EAA2BE,OAAO,CAACC,GAAR,CAAYC,QAAZ,EAA3B,EAAmD;AAAE,gBAAY;AAAd,GAAnD,CAAN;;AAEA,MAAI;AACFR,IAAAA,IAAI,CAACS,IAAL,CAAUhB,OAAO,CAACiB,aAAR,CAAsBN,IAAtB,CAAV;AACD,GAFD,SAEU;AACR,UAAMd,UAAU,CAACqB,MAAX,CAAkBP,IAAlB,CAAN;AACD;AAEF,CAZG,CAAJ;AAcAb,IAAI,CAAC,sDAAD,EAA0DS,IAAD,IAAU;AACrE,MAAII,IAAI,GAAI,GAAEJ,IAAI,CAACC,OAAL,CAAaC,QAAS,iBAApC;AACAF,EAAAA,IAAI,CAACY,KAAL,CAAWnB,OAAO,CAACiB,aAAR,CAAsBN,IAAtB,CAAX;AACD,CAHG,CAAJ;AAKAb,IAAI,CAAC,6DAAD,EAAgE,MAAOS,IAAP,IAAgB;AAElF,MAAII,IAAI,GAAI,GAAEJ,IAAI,CAACC,OAAL,CAAaC,QAAS,qBAApC;AAEA,QAAMZ,UAAU,CAACe,SAAX,CAAqBD,IAArB,EAA2B,QAA3B,EAAqC;AAAE,gBAAY;AAAd,GAArC,CAAN;AAEAJ,EAAAA,IAAI,CAACY,KAAL,CAAWnB,OAAO,CAACiB,aAAR,CAAsBN,IAAtB,CAAX;AACA,QAAMJ,IAAI,CAACa,WAAL,CAAiBvB,UAAU,CAACwB,MAAX,CAAkBC,IAAlB,CAAuBzB,UAAvB,EAAmCc,IAAnC,EAAyCd,UAAU,CAAC0B,IAApD,CAAjB,EAA4E;AAAE,YAAQ;AAAV,GAA5E,CAAN;AAED,CATG,CAAJ;AAWAzB,IAAI,CAAC,iDAAD,EAAoD,MAAOS,IAAP,IAAgB;AAEtE,MAAII,IAAI,GAAI,GAAEJ,IAAI,CAACC,OAAL,CAAaC,QAAS,aAApC;AACA,MAAIe,MAAM,GAAG,IAAIzB,YAAJ,EAAb;;AAEA,MAAI;AAEF,UAAMyB,MAAM,CAACrB,MAAP,CAAcF,OAAO,CAACwB,OAAR,CAAgB,aAAhB,CAAd,CAAN;AAEA,UAAM5B,UAAU,CAACe,SAAX,CAAqBD,IAArB,EAA2Ba,MAAM,CAACV,GAAP,CAAWC,QAAX,EAA3B,EAAkD;AAAE,kBAAY;AAAd,KAAlD,CAAN;;AAEA,QAAI;AACFR,MAAAA,IAAI,CAACS,IAAL,EAAU,MAAMQ,MAAM,CAACP,aAAP,CAAqBN,IAArB,CAAhB;AACD,KAFD,SAEU;AACR,YAAMd,UAAU,CAACqB,MAAX,CAAkBP,IAAlB,CAAN;AACD;AAEF,GAZD,SAYU;AACR,UAAMa,MAAM,CAACE,GAAP,EAAN;AACD;AAEF,CArBG,CAAJ","sourcesContent":["import FileSystem from 'fs-extra'\nimport Test from 'ava'\nimport { WorkerClient } from '@virtualpatterns/mablung-worker'\n\nimport { Process } from '../../index.js'\n\nconst Require = __require\n\nTest.before(async (test) => {\n  test.context.basePath = 'process/pid/exists-pid-file'\n  await FileSystem.ensureDir(test.context.basePath)\n})\n\nTest('Process.existsPidFile(path) when path exists and is valid', async (test) => {\n\n  let path = `${test.context.basePath}/exists-valid.pid`\n\n  await FileSystem.writeFile(path, process.pid.toString(), { 'encoding': 'utf-8' })\n\n  try {\n    test.true(Process.existsPidFile(path))\n  } finally {\n    await FileSystem.unlink(path)\n  }\n\n})\n\nTest('Process.existsPidFile(path) when path does not exist', (test) => {\n  let path = `${test.context.basePath}/not-exists.pid`\n  test.false(Process.existsPidFile(path))\n})\n\nTest('Process.existsPidFile(path) when path exists and is invalid', async (test) => {\n\n  let path = `${test.context.basePath}/exists-invalid.pid`\n\n  await FileSystem.writeFile(path, '100000', { 'encoding': 'utf-8' })\n\n  test.false(Process.existsPidFile(path))\n  await test.throwsAsync(FileSystem.access.bind(FileSystem, path, FileSystem.F_OK), { 'code': 'ENOENT' })\n\n})\n\nTest('Process.existsPidFile(path) when using a worker', async (test) => {\n\n  let path = `${test.context.basePath}/worker.pid`\n  let worker = new WorkerClient()\n\n  try {\n\n    await worker.import(Require.resolve('./worker.js'))\n\n    await FileSystem.writeFile(path, worker.pid.toString(), { 'encoding': 'utf-8' })\n\n    try {\n      test.true(await worker.existsPidFile(path))\n    } finally {\n      await FileSystem.unlink(path)\n    }\n  \n  } finally {\n    await worker.end()\n  }\n\n})\n"],"file":"process.exists-pid-file.test.js"}